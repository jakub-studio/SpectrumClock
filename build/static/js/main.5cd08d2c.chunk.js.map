{"version":3,"sources":["lib/time.ts","lib/colours.ts","lib/gradients.ts","lib/params.ts","hooks/useTime.ts","App.tsx","hooks/useFullscreen.ts","reportWebVitals.js","index.tsx"],"names":["splitNum","num","minPoints","string","toString","final","char","push","parseInt","length","zerosToAdd","i","unshift","padNum","minLength","join","isLeapYear","date","year","getFullYear","calcProgress","count","total","calcRotationMarkers","value","splitPoints","overflowBegins","overflowValue","nextValue","undefined","cloneDate","Date","valueOf","groupsApi","getRotationMarkers","getProgress","progress","mn","getMonth","dn","getDate","dayOfYear","getDayOfYear","yearDuration","split","getDurationUntilNext","clone","setFullYear","setHours","getTime","month","dateClone","setMonth","toLocaleDateString","currentDate","setDate","lastDayOfMonth","getHours","hour","getMinutes","minute","getSeconds","setMinutes","second","getMilliseconds","setSeconds","window","timeApi","stepsArray","getHSLString","array","stepsColours","hueIncrementAmount","step","defineColours","ParamNames","getGradientString","colours","gradientSteps","stops","stopsHalf","currentDegree","forEach","colour","mappedSteps","map","params","URLSearchParams","location","search","Parameter","name","format","paramValue","get","returnValue","DATE","paused","PAUSED","Boolean","useSharedTimeState","create","set","setupInterval","setInterval","state","newDate","setMilliseconds","currentGroup","interval","refreshRate","pause","clearInterval","unpause","resetInterval","newInterval","console","log","groups","RingContainer","styled","marginTop","width","height","display","justifyContent","alignItems","RingProgressionPointer","position","top","borderRadius","opacity","backgroundColor","transition","RotationMarkerDivider","margin","RotationMarkerContainer","variants","show","true","transform","false","$$color","color","fontSize","fontWeight","userSelect","RingOuter","aspectRatio","pointerEvents","RingInner","cursor","filter","RingController","props","group","innerRef","useRef","outerRef","animationRef","useReducer","previousState","hovered","current","el","style","setState","setHovered","markers","setMarkers","animate","useCallback","getState","durationUntilNext","animationFinishDate","background","duration","iterations","easing","addEventListener","applyStyles","rotation","useEffect","onMouseOver","onMouseOut","removeEventListener","play","rotationMarkers","useRing","representing","indexOf","data-representing","data-value","title","css","ref","NewRing","TimeGroupContainer","TimeGroup","memo","bold","previousProps","newProps","children","TimeString","shallow","ms","StateControllerButtons","onPause","event","preventDefault","onPlay","disabled","onClick","FullscreenController","fullscreened","document","fullscreenElement","toggle","exitFullscreen","documentElement","requestFullscreen","useFullscreen","ControllerButtons","gap","marginBottom","App","className","type","defaultValue","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cd08d2c.chunk.js","sourcesContent":["import { RotationMarkers } from \"../hooks/useTime\";\n\nexport const splitNum = (num: number, minPoints?: number): number[] => {\n\tconst string = num.toString();\n\tconst final = [];\n\n\tfor (const char of string) {\n\t\tfinal.push(parseInt(char, 10));\n\t}\n\n\tif (minPoints && (final.length < minPoints)) {\n\t\tconst zerosToAdd = minPoints - final.length;\n\t\tfor (let i = 0; i < zerosToAdd; i++) {\n\t\t\tfinal.unshift(0);\n\t\t}\n\t}\n\n\treturn final;\n}\n\nexport const padNum = (num: number, minLength: number): string => {\n\treturn splitNum(num, minLength).join(\"\")\n}\n\nexport const getDataPointsFromDate = (date: Date) => {\n\treturn {\n\t\tyear: splitNum(date.getFullYear()),\n\t\tmonth: splitNum(date.getMonth() + 1, 2),\n\t\tdate: splitNum(date.getDate(), 2),\n\t\thour: splitNum(date.getHours(), 2),\n\t\tminute: splitNum(date.getMinutes(), 2),\n\t\tsecond: splitNum(date.getSeconds(), 2)\n\t};\n}\n\nexport type GroupNames =  \"year\" | \"month\" | \"date\" | \"hour\" | \"minute\" | \"second\"\n\nconst isLeapYear = function(date: Date) {\n    var year = date.getFullYear();\n    if((year & 3) !== 0) return false;\n    return ((year % 100) !== 0 || (year % 400) === 0);\n};\n\nconst getDayOfYear = function(date: Date) {\n\tvar dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\tvar mn = date.getMonth();\n\tvar dn = date.getDate();\n\tvar dayOfYear = dayCount[mn] + dn;\n\tif(mn > 1 && isLeapYear(date)) dayOfYear++;\n\treturn dayOfYear;\n};\n\nconst calcProgress = (count: number, total: number): number => {\n\treturn count / total * 100;\n}\n\nconst calcRotationMarkers = (value: number, splitPoints?: number | false, overflowBegins?: number, overflowValue?: number): [string | number, string | number] => {\n\tif (!splitPoints) {\n\t\treturn [value, value + 1]\n\t} else {\n\t\tlet nextValue = value + 1;\n\t\tif ((overflowBegins && overflowValue !== undefined) && (nextValue >= overflowBegins)) {\n\t\t\tnextValue = overflowValue;\n\t\t}\n\t\treturn [\n\t\t\tsplitNum(value, splitPoints).join(\"\"),\n\t\t\tsplitNum(nextValue, splitPoints).join(\"\")\n\t\t]\n\t}\n}\n\nexport const cloneDate = (date: Date): Date => {\n\treturn new Date(date.valueOf());\n}\n\nexport const groupsApi: Record<GroupNames, {\n\tgetRotationMarkers: (date: Date) => RotationMarkers,\n\tgetProgress: (date: Date) => number;\n\tsplit: (date: Date) => number[];\n\tgetDurationUntilNext: (date: Date) => number;\n}> = {\n\tyear: {\n\t\tgetRotationMarkers (date) {\n\t\t\treturn calcRotationMarkers(date.getFullYear())\n\t\t},\n\t\tgetProgress (date) {\n\t\t\tconst progress = getDayOfYear(date);\n\t\t\tconst yearDuration = isLeapYear(date) ? 366 : 365;\n\t\t\treturn calcProgress(progress, yearDuration);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getFullYear())\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst clone = cloneDate(date);\n\t\t\tclone.setFullYear(date.getFullYear() + 1, 0, 1);\n\t\t\tclone.setHours(0, 0, 0, 0);\n\t\t\treturn clone.getTime() - date.getTime();\n\t\t}\n\t},\n\tmonth: {\n\t\tgetRotationMarkers (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\tdateClone.setMonth(date.getMonth() + 1);\n\t\t\treturn [\n\t\t\t\tdate.toLocaleDateString(\"en-GB\", {month: \"short\"}),\n\t\t\t\tdateClone.toLocaleDateString(\"en-GB\", {month: \"short\"})\n\t\t\t]\n\t\t},\n\t\tgetProgress (date) {\n\t\t\tconst currentDate = date.getDate();\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\t\n\t\t\t// Get first day of next month\n\t\t\tdateClone.setMonth(date.getMonth() + 1)\n\t\t\tdateClone.setDate(0);\n\t\t\tconst lastDayOfMonth = dateClone.getDate();\n\t\t\treturn calcProgress(currentDate, lastDayOfMonth + 1);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getMonth() + 1, 2)\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\t\n\t\t\t// Get first day of next month\n\t\t\tdateClone.setMonth(date.getMonth() + 1, 1);\n\t\t\tdateClone.setHours(0, 0, 0, 0);\n\t\t\t\n\t\t\treturn dateClone.getTime() - date.getTime()\n\t\t}\n\t},\n\tdate: {\n\t\tgetRotationMarkers (date) {\n\t\t\tconst currentDate = date.getDate();\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\tdateClone.setDate(currentDate + 1);\n\t\t\treturn [\n\t\t\t\tsplitNum(currentDate, 2).join(\"\"),\n\t\t\t\tsplitNum(dateClone.getDate(), 2).join(\"\")\n\t\t\t]\n\t\t},\n\t\tgetProgress (date) {\n\t\t\treturn calcProgress(date.getHours(), 24);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getDate(), 2)\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\t\n\t\t\tdateClone.setDate(date.getDate() + 1);\n\t\t\tdateClone.setHours(0, 0, 0, 0);\n\t\t\t\n\t\t\treturn dateClone.getTime() - date.getTime()\n\t\t}\n\t},\n\thour: {\n\t\tgetRotationMarkers (date) {\n\t\t\treturn calcRotationMarkers(date.getHours(), 2, 24, 0)\n\t\t},\n\t\tgetProgress (date) {\n\t\t\treturn calcProgress(date.getMinutes(), 60);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getHours(), 2);\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\tdateClone.setHours(date.getHours() + 1, 0,0,0);\n\t\t\treturn dateClone.getTime() - date.getTime()\n\t\t}\n\t},\n\tminute: {\n\t\tgetRotationMarkers (date) {\n\t\t\treturn calcRotationMarkers(date.getMinutes(), 2, 60, 0)\n\t\t},\n\t\tgetProgress (date) {\n\t\t\treturn calcProgress(date.getSeconds(), 60);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getMinutes(), 2);\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\tdateClone.setMinutes(date.getMinutes() + 1, 0,0);\n\t\t\treturn dateClone.getTime() - date.getTime()\n\t\t}\n\t},\n\tsecond: {\n\t\tgetRotationMarkers (date) {\n\t\t\treturn calcRotationMarkers(date.getSeconds(), 2, 60, 0)\n\t\t},\n\t\tgetProgress (date) {\n\t\t\treturn calcProgress(date.getMilliseconds(), 999);\n\t\t},\n\t\tsplit (date) {\n\t\t\treturn splitNum(date.getSeconds(), 2);\n\t\t},\n\t\tgetDurationUntilNext (date) {\n\t\t\tconst dateClone = cloneDate(date);\n\t\t\tdateClone.setSeconds(date.getSeconds() + 1, 0);\n\t\t\treturn dateClone.getTime() - date.getTime()\n\t\t}\n\t}\n}\n\n//@ts-ignore\nwindow.timeApi = groupsApi;\n","export const startingHue = 0;\nexport const hueRange = 330;\nexport const getSaturation = (): number => 100;\nexport const getLightness = (): number => 50;\nexport type HSLArray = [number, number, number];\n\nexport const stepsArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nexport type Steps = typeof stepsArray[number];\n\nexport const getHSLString = (array: HSLArray): string =>\n\t`hsla(${array[0]}, ${array[1]}%, ${array[2]}%, 1)`;\n\nexport const stepsColours: Record<Steps, HSLArray> = {};\n\nconst defineColours = () => {\n\tconst length = stepsArray.length - 1;\n\n\tconst hueIncrementAmount = hueRange / length;\n\n\tfor (const step of stepsArray) {\n\t\tstepsColours[step] = [\n\t\t\tstartingHue + hueIncrementAmount * step,\n\t\t\tgetSaturation(),\n\t\t\tgetLightness()\n\t\t];\n\t}\n};\n\ndefineColours();","import { HSLArray, getHSLString, stepsColours } from \"./colours\";\n\ntype GradientStep = [HSLArray, number];\n\nexport const getGradientString = (colours: number[]): string => {\n\tlet gradientSteps: GradientStep[] = [];\n\tconst { length } = colours;\n\tconst stops = 360 / colours.length;\n\tconst stopsHalf = stops / 2;\n\n\tif (length === 1) {\n\t\tgradientSteps.push([stepsColours[0], 0]);\n\t\tgradientSteps.push([stepsColours[colours[0]], 360]);\n\t} else {\n\t\tlet currentDegree = 0 - stopsHalf;\n\n\t\tgradientSteps.push([\n\t\t\tstepsColours[colours[colours.length - 1]],\n\t\t\tcurrentDegree\n\t\t]);\n\t\tcurrentDegree = currentDegree + stops;\n\n\t\tcolours.forEach((colour) => {\n\t\t\tgradientSteps.push([stepsColours[colour], currentDegree]);\n\t\t\tcurrentDegree = currentDegree + stops;\n\t\t});\n\n\t\tgradientSteps.push([stepsColours[colours[0]], currentDegree]);\n\t}\n\n\tconst mappedSteps = gradientSteps.map(\n\t\t(step) => `${getHSLString(step[0])} ${step[1]}deg`\n\t);\n\n\treturn `conic-gradient(from 0deg at 50% 50%, ${mappedSteps.join(\", \")})`;\n};\n\nexport const getPercentageBasedGradientString = (colours: number[]): string => {\n\tlet gradientSteps: GradientStep[] = [];\n\tconst { length } = colours;\n\tconst stops = 360 / colours.length;\n\tconst stopsHalf = stops / 2;\n\n\tif (length === 1) {\n\t\tgradientSteps.push([stepsColours[0], 0]);\n\t\tgradientSteps.push([stepsColours[colours[0]], 360]);\n\t} else {\n\t\tlet currentDegree = 0 - stopsHalf;\n\n\t\tgradientSteps.push([\n\t\t\tstepsColours[colours[colours.length - 1]],\n\t\t\tcurrentDegree\n\t\t]);\n\t\tcurrentDegree = currentDegree + stops;\n\n\t\tcolours.forEach((colour) => {\n\t\t\tgradientSteps.push([stepsColours[colour], currentDegree]);\n\t\t\tcurrentDegree = currentDegree + stops;\n\t\t});\n\n\t\tgradientSteps.push([stepsColours[colours[0]], currentDegree]);\n\t}\n\n\tconst mappedSteps = gradientSteps.map(\n\t\t(step) => `${getHSLString(step[0])} ${step[1]}deg`\n\t);\n\n\treturn `conic-gradient(from 0deg at 50% 50%, ${mappedSteps.join(\", \")})`;\n};","export const params = new URLSearchParams(window.location.search);\nexport const Parameter = <T extends unknown>(name: string, format?: (value: string | null) => T): T => {\n\tconst paramValue = params.get(name);\n\tlet returnValue = paramValue as unknown;\n\n\tif (typeof format === \"function\") {\n\t\treturnValue = format(paramValue);\n\t}\n\n\treturn returnValue as T;\n}\n\nexport enum ParamNames {\n\tDATE = \"d\",\n\tPAUSED = \"p\"\n}\n\nexport const date = Parameter(ParamNames.DATE, date => {\n\treturn date ? new Date(date) : null\n});\n\nexport const paused = Parameter(ParamNames.PAUSED, Boolean);","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport create, { GetState, SetState, State } from \"zustand\";\nimport { getGradientString } from \"../lib/gradients\";\nimport { date, paused } from \"../lib/params\";\nimport { GroupNames, groupsApi, cloneDate } from \"../lib/time\";\n\nexport interface TimeState extends State {\n\treadonly paused: boolean;\n\tpause(): void;\n\tunpause(): void;\n\tdate: Date;\n\tcurrentGroup: GroupNames | null;\n\tinterval?: number;\n\tresetInterval(): void;\n\treadonly refreshRate: number;\n}\n\nexport type RotationMarkers = [string | number, string | number];\n\nconst STATE_REFRESH_RATE = 100;\nexport const useSharedTimeState = create<TimeState>((set, get) => {\n\tconst setupInterval = (): number => {\n\t\treturn setInterval((set: SetState<TimeState>, get: GetState<TimeState>) => {\n\t\t\tconst state = get();\n\t\t\tconst newDate = cloneDate(state.date);\n\t\t\tnewDate.setMilliseconds(newDate.getMilliseconds() + STATE_REFRESH_RATE)\n\t\t\tset({ date: newDate });\n\t\t}, STATE_REFRESH_RATE, set, get) as unknown as number;\n\t}\n\n\tconst initialState: TimeState = {\n\t\tpaused,\n\t\tdate: date ? new Date(date) : new Date(),\n\t\tcurrentGroup: null,\n\t\tinterval: paused ? void 0 : setupInterval(),\n\t\trefreshRate: STATE_REFRESH_RATE,\n\t\tpause() {\n\t\t\tconst state = get();\n\t\t\tclearInterval(state.interval);\n\t\t\tset({ paused: true, interval: void 0 });\n\t\t},\n\t\tunpause() {\n\t\t\tconst interval = setupInterval();\n\t\t\tset({ paused: false, interval });\n\t\t},\n\t\tresetInterval () {\n\t\t\tconst state = get();\n\t\t\tclearInterval(state.interval);\n\t\t\tconst newInterval = setupInterval();\n\t\t\tset({ interval: newInterval});\n\t\t}\n\t};\n\n\treturn initialState;\n});\n\nconsole.log(useSharedTimeState);\n\nexport const useRing = (group: GroupNames) => {\n\tconst innerRef = useRef<HTMLDivElement | null>(null);\n\tconst outerRef = useRef<HTMLDivElement | null>(null);\n\tconst animationRef = useRef<Animation | null>(null);\n\tconst timeApi = groupsApi[group];\n\n\tconst [hovered, setHovered] = useReducer((previousState: boolean, hovered: boolean) => {\n\t\tif (!outerRef.current) return hovered;\n\t\tconst { current: el } = outerRef;\n\t\tif (hovered) {\n\t\t\tel.style.transform = \"scale(1.05)\";\n\t\t\tuseSharedTimeState.setState({currentGroup: group});\n\t\t} else {\n\t\t\tel.style.transform = \"scale(1.0)\";\n\t\t\tuseSharedTimeState.setState({currentGroup: null});\n\t\t}\n\t\treturn hovered;\n\t}, false);\n\n\tconst [markers, setMarkers] = useReducer((markers: RotationMarkers, date: Date) => {\n\t\treturn timeApi.getRotationMarkers(date)\n\t}, [\"\", \"\"]);\n\n\n\tconst animate: () => void = useCallback(() => {\n\t\tif (!innerRef.current) return;\n\t\tuseSharedTimeState.setState({ date: new Date() })\n\t\tconst { date } = useSharedTimeState.getState();\n\t\tconst { current: el } = innerRef;\n\n\t\tconst durationUntilNext = timeApi.getDurationUntilNext(date);\n\t\tconst animationFinishDate = cloneDate(date)\n\t\tanimationFinishDate.setMilliseconds(date.getMilliseconds() + durationUntilNext)\n\n\t\tconst animation = animationRef.current = el.animate([\n\t\t\t{\n\t\t\t\ttransform: \"rotate(0deg)\",\n\t\t\t\tbackground: getGradientString(timeApi.split(date))\n\t\t\t},\n\t\t\t{\n\t\t\t\ttransform: \"rotate(360deg)\",\n\t\t\t\tbackground: getGradientString(timeApi.split(animationFinishDate))\n\t\t\t}\n\t\t], {\n\t\t\tduration: durationUntilNext,\n\t\t\titerations: 1,\n\t\t\teasing: \"linear\"\n\t\t});\n\n\t\tanimation.addEventListener(\"finish\", animate);\n\t\t//@ts-ignore\n\t}, [timeApi]);\n\n\tconst applyStyles = useCallback(() => {\n\t\tif (!innerRef.current) return;\n\t\tconst { date } = useSharedTimeState.getState();\n\t\tconst { current: el } = innerRef;\n\n\t\tel.style.background = getGradientString(timeApi.split(date));\n\t\tconst rotation = timeApi.getProgress(date) * 3.6\n\t\tel.style.transform = `rotate(${rotation}deg)`;\n\t\treturn rotation;\n\t}, [timeApi]);\n\n\t// Init Ring Effect\n\tuseEffect(() => {\n\t\tif (!innerRef.current) return;\n\t\tconst { date, paused } = useSharedTimeState.getState();\n\t\tsetMarkers(date);\n\n\t\tconst { current: el } = innerRef;\n\t\tconst rotation = applyStyles();\n\n\t\tconst onMouseOver = () => setHovered(true);\n\t\tel.addEventListener(\"mouseover\", onMouseOver);\n\t\tconst onMouseOut = () => setHovered(false);\n\t\tel.addEventListener(\"mouseout\", onMouseOut);\n\n\t\tif (!paused) {\n\t\t\tconst animation = animationRef.current = el.animate([\n\t\t\t\t{ transform: `rotate(${rotation}deg)` },\n\t\t\t\t{ transform: \"rotate(360deg)\" }\n\t\t\t], {\n\t\t\t\tduration: timeApi.getDurationUntilNext(date),\n\t\t\t\titerations: 1,\n\t\t\t\teasing: \"linear\"\n\t\t\t});\n\n\t\t\tanimation.addEventListener(\"finish\", animate);\n\t\t}\n\n\t\treturn () => {\n\t\t\tel.removeEventListener(\"mouseover\", onMouseOver);\n\t\t\tel.removeEventListener(\"mouseout\", onMouseOut);\n\t\t}\n\n\t}, [animate, applyStyles, timeApi]);\n\n\t// Pause Effect\n\tconst paused = useSharedTimeState(state => state.paused);\n\tuseEffect(() => {\n\t\tif (!animationRef.current) return;\n\t\tif (paused) {\n\t\t\tanimationRef.current.pause();\n\t\t} else {\n\t\t\tanimationRef.current.play();\n\t\t}\n\t\t\n\t}, [paused]);\n\n\treturn {\n\t\tinnerRef,\n\t\touterRef,\n\t\thovered,\n\t\trotationMarkers: markers\n\t}\n}","import './App.css';\nimport { styled } from '@stitches/react';\nimport { GroupNames, padNum } from './lib/time';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { TimeState, useRing, useSharedTimeState } from './hooks/useTime';\nimport { date, ParamNames, params } from './lib/params';\nimport shallow from \"zustand/shallow\";\nimport { useFullscreen } from './hooks/useFullscreen';\n\nconst groups: GroupNames[] = [\"year\", \"month\", \"date\", \"hour\", \"minute\", \"second\"];\n\nconst RING_BASE_SIZE = 300;\nconst RING_REDUCTION = 40;\n\nconst RingContainer = styled(\"div\", {\n\tmarginTop: 10,\n\twidth: \"100%\",\n\theight: 400,\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\",\n\talignItems: \"center\"\n});\n\ninterface RingControllerProps {\n\trepresenting: GroupNames;\n}\n\nconst RingProgressionPointer = styled(\"div\", {\n\tposition: \"absolute\",\n\ttop: 3,\n\twidth: 2,\n\theight: 10,\n\tborderRadius: \"30%\",\n\topacity: 1,\n\tbackgroundColor: \"hsla(0, 0%, 0%, 0.75)\",\n\ttransition: \"top 0.175s ease\",\n});\n\nconst RotationMarkerDivider = styled(\"div\", {\n\twidth: 2,\n\theight: 10,\n\tmargin: \"0 5px\"\n})\n\nconst RotationMarkerContainer = styled(\"code\", {\n\tvariants: {\n\t\tshow: {\n\t\t\ttrue: {\n\t\t\t\ttransform: \"translate(0px, 0px)\",\n\t\t\t\topacity: 1\n\t\t\t},\n\t\t\tfalse: {\n\t\t\t\ttransform: \"translate(0px, 20px)\",\n\t\t\t\topacity: 0\n\t\t\t}\n\t\t}\n\t},\n\t$$color: \"hsla(0, 0%, 0%, 0.35)\",\n\tposition: \"absolute\",\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\ttop: 5,\n\tcolor: \"$$color\",\n\tfontSize: 14,\n\tfontWeight: \"bold\",\n\ttransition: \"all 0.175s ease\",\n\tuserSelect: \"none\",\n\t[`& ${RotationMarkerDivider}`]: {\n\t\tbackgroundColor: \"$$color\"\n\t}\n});\n\nconst RingOuter = styled(\"div\", {\n\tposition: \"absolute\",\n\taspectRatio: \"1/1\",\n\tpointerEvents: \"none\",\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\",\n\talignItems: \"center\",\n\ttransition: \"transform 0.175s ease\",\n});\n\nconst RingInner = styled(\"div\", {\n\twidth: \"100%\",\n\theight: \"100%\",\n\tcursor: \"grab\",\n\tpointerEvents: \"all\",\n\tborderRadius: \"100%\",\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\",\n\talignItems: \"center\",\n\tfilter: \"drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.3))\",\n\ttransition: \"transform 0.175s ease\",\n\t\"&:active\": {\n\t\tcursor: \"grabbing\"\n\t},\n\t\"&:hover\": {\n\t\ttransform: \"scale(1.075)\"\n\t},\n\t[`&:hover ${RingProgressionPointer}`]: {\n\t\ttop: 9\n\t}\n})\n\nconst RingController = (props: RingControllerProps) => {\n\tconst {\n\t\tinnerRef,\n\t\touterRef,\n\t\trotationMarkers,\n\t\thovered\n\t} = useRing(props.representing);\n\tconst width = useRef(RING_BASE_SIZE - (RING_REDUCTION * groups.indexOf(props.representing)));\n\n\treturn <RingOuter\n\t\tdata-representing={props.representing}\n\t\tdata-value={rotationMarkers[0]}\n\t\ttitle={`${props.representing}: ${rotationMarkers[0]}`}\n\t\tcss={{ width: width.current }}\n\t\tref={outerRef}\n\t>\n\t\t<RingInner ref={innerRef}>\n\t\t\t<RingProgressionPointer />\n\t\t</RingInner>\n\n\t\t<RotationMarkerContainer show={hovered}>\n\t\t\t{rotationMarkers[0]}<RotationMarkerDivider />{rotationMarkers[1]}\n\t\t</RotationMarkerContainer>\n\t</RingOuter>\n}\n\nconst NewRing = () => {\n\treturn <RingContainer css={{ position: \"relative\" }}>\n\t\t\t<RingController representing=\"year\"/>\n\t\t\t<RingController representing=\"month\"/>\n\t\t\t<RingController representing=\"date\"/>\n\t\t\t<RingController representing=\"hour\"/>\n\t\t\t<RingController representing=\"minute\"/>\n\t\t\t<RingController representing=\"second\"/>\n\t</RingContainer>\n}\n\nconst TimeGroupContainer = styled(\"code\", { fontSize: \"18pt\" });\n\nconst TimeGroup = memo(styled(\"span\", {\n\tvariants: {\n\t\tbold: {\n\t\t\ttrue: {\n\t\t\t\tfontWeight: \"bold\"\n\t\t\t},\n\t\t\tfalse: {\n\t\t\t\tfontWeight: \"normal\"\n\t\t\t}\n\t\t}\n\t}\n}), (previousProps, newProps) => {\n\tif (previousProps.bold !== newProps.bold) {\n\t\treturn false;\n\t}\n\tif (previousProps.children === newProps.children) {\n\t\treturn true;\n\t}\n\treturn false;\n});\n\nconst TimeString = () => {\n\tconst { date, currentGroup } = useSharedTimeState(\n\t\tuseCallback((state): Pick<TimeState, \"date\" | \"currentGroup\"> => ({ date: state.date, currentGroup: state.currentGroup }), []),\n\t\tshallow\n\t);\n\n\tlet ms = date.getMilliseconds().toString();\n\tif (ms.length === 2) {\n\t\tms = \"0\"\n\t} else {\n\t\tms = ms[0];\n\t}\n\n\treturn <TimeGroupContainer>\n\t\t<TimeGroup bold={currentGroup === \"year\"}>{date.getFullYear()}</TimeGroup>/ \n\t\t<TimeGroup bold={currentGroup === \"month\"}>{padNum(date.getMonth() + 1, 2)}</TimeGroup>/\n\t\t<TimeGroup bold={currentGroup === \"date\"}>{padNum(date.getDate(), 2)}</TimeGroup>{\" \"}\n\t\t<TimeGroup bold={currentGroup === \"hour\"}>{padNum(date.getHours(), 2)}</TimeGroup>:\n\t\t<TimeGroup bold={currentGroup === \"minute\"}>{padNum(date.getMinutes(), 2)}</TimeGroup>:\n\t\t<TimeGroup bold={currentGroup === \"second\"}>{padNum(date.getSeconds(), 2)}:{ms}</TimeGroup>\n\t</TimeGroupContainer>\n}\n\nconst StateControllerButtons = () => {\n\tconst state = useSharedTimeState(\n\t\tuseCallback((state): Pick<TimeState, \"pause\" | \"paused\" | \"unpause\"> => ({paused: state.paused, pause: state.pause, unpause: state.unpause}), []),\n\t\tshallow\n\t);\n\n\tconst onPause = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tstate.pause();\n\t}, [state]);\n\n\tconst onPlay = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tstate.unpause();\n\t}, [state]);\n\n\treturn <div>\n\t\t<button disabled={!state.paused} onClick={onPlay}>play</button>\n\t\t<button disabled={state.paused} onClick={onPause}>pause</button>\n\t</div>\n}\n\nconst FullscreenController = () => {\n\tconst { fullscreened, toggle } = useFullscreen();\n\treturn <button onClick={toggle}>{fullscreened ? \"exit fullscreen\" : \"fullscreen\"}</button>\n}\n\nconst ControllerButtons = styled(\"div\", {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n\tgap: '8px',\n\tmarginBottom: '8px'\n});\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t<ControllerButtons>\n\t\t\t\t\t<StateControllerButtons />\n\t\t\t\t\t<FullscreenController />\n\t\t\t\t</ControllerButtons>\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"datetime-local\" name={ParamNames.DATE} defaultValue={date ? params.get(ParamNames.DATE) + \"\" : void 0} required />\n\t\t\t\t\t<input type=\"hidden\" name={ParamNames.PAUSED} value=\"1\" />\n\t\t\t\t\t<button type=\"submit\">set</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<TimeString />\n\t\t\t<NewRing />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useCallback } from 'react'\n\nexport const useFullscreen = () => {\n\tconst fullscreened: boolean = document.fullscreenElement !== null;\n\n\tconst toggle = useCallback(() => {\n\t\tif (fullscreened) {\n\t\t\ttry {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t} catch {}\n\t\t} else {\n\t\t\t// use document.documentElement instead of body due to https://stackoverflow.com/a/24727000\n\t\t\tdocument.documentElement.requestFullscreen();\n\t\t}\n\t}, [fullscreened]);\n\n\treturn {\n\t\ttoggle,\n\t\tfullscreened\n\t}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);"],"sourceRoot":""}